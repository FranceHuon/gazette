/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SigninLazyImport = createFileRoute('/signin')()
const ParametersLazyImport = createFileRoute('/parameters')()
const LoginLazyImport = createFileRoute('/login')()
const HomepageLazyImport = createFileRoute('/homepage')()
const ExploreLazyImport = createFileRoute('/explore')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SigninLazyRoute = SigninLazyImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin.lazy').then((d) => d.Route))

const ParametersLazyRoute = ParametersLazyImport.update({
  id: '/parameters',
  path: '/parameters',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/parameters.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const HomepageLazyRoute = HomepageLazyImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/homepage.lazy').then((d) => d.Route))

const ExploreLazyRoute = ExploreLazyImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/explore.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreLazyImport
      parentRoute: typeof rootRoute
    }
    '/homepage': {
      id: '/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof HomepageLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/parameters': {
      id: '/parameters'
      path: '/parameters'
      fullPath: '/parameters'
      preLoaderRoute: typeof ParametersLazyImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/login': typeof LoginLazyRoute
  '/parameters': typeof ParametersLazyRoute
  '/signin': typeof SigninLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/login': typeof LoginLazyRoute
  '/parameters': typeof ParametersLazyRoute
  '/signin': typeof SigninLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/explore': typeof ExploreLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/login': typeof LoginLazyRoute
  '/parameters': typeof ParametersLazyRoute
  '/signin': typeof SigninLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/explore'
    | '/homepage'
    | '/login'
    | '/parameters'
    | '/signin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/explore'
    | '/homepage'
    | '/login'
    | '/parameters'
    | '/signin'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/explore'
    | '/homepage'
    | '/login'
    | '/parameters'
    | '/signin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ExploreLazyRoute: typeof ExploreLazyRoute
  HomepageLazyRoute: typeof HomepageLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  ParametersLazyRoute: typeof ParametersLazyRoute
  SigninLazyRoute: typeof SigninLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  ExploreLazyRoute: ExploreLazyRoute,
  HomepageLazyRoute: HomepageLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ParametersLazyRoute: ParametersLazyRoute,
  SigninLazyRoute: SigninLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/explore",
        "/homepage",
        "/login",
        "/parameters",
        "/signin"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/explore": {
      "filePath": "explore.lazy.tsx"
    },
    "/homepage": {
      "filePath": "homepage.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/parameters": {
      "filePath": "parameters.lazy.tsx"
    },
    "/signin": {
      "filePath": "signin.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
